{"version":3,"sources":["components/hits-container/index.tsx","common/services/search.ts","components/no-events/index.tsx","components/search-bar/index.tsx","components/greeting/index.tsx","components/button/index.tsx","containers/HomePage/index.tsx","containers/AboutPage/index.tsx","components/special-characters-container/index.tsx","containers/SpecialCharacters/index.tsx","routes.tsx","containers/App.tsx","serviceWorker.tsx","index.tsx"],"names":["showComponent","client","index","NoEvents","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","HitsContainer","props","call","queryResults","items","React","Children","toArray","length","no_events_NoEvents","_this$props","events","hide","map","event","href","links","name","dates","location","showResults","hidden","src","searchClick","_x","_searchClick","_callee","query","regenerator_default","wrap","_context","prev","next","algoliasearch","initIndex","abrupt","search","then","result","hits","hit","start_date","end_date","filter","link","url","city","eng","country","stop","Greeting","SearchBar","_this","state","_updateEvents","asyncToGenerator","mark","sent","setState","t0","console","log","_this2","_this$state","Paper_default","elevation","InputBase_default","placeholder","onChange","target","onKeyPress","updateEvents","IconButton_default","aria-label","onClick","Search_default","greeting_Greeting","hits_container_HitsContainer","SwitchButton","text","Link","to","Button_default","variant","color","HomePage","search_bar_SearchBar","button_SwitchButton","AboutPage","alt","SpecialCharactersContainer","charactersUdmKomi","charactersMari","charactersHungarian","onCharacterClick","character","selectedCharacter","characterToDiv","lib","options","debug","onCopy","ToastsStore","success","concat","e","mapUdmKomi","mapMari","mapHungarian","react_toasts_lib","store","SpecialCharacters","special_characters_container_SpecialCharactersContainer","Routes","userProps","Switch","Route","exact","path","component","App","routes","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1b284696.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.scss';\nimport { NoEvents } from '../no-events/index';\n\nlet showComponent;\n\nexport class HitsContainer extends Component<any, any>{\n    constructor(props) {\n        super(props);\n    }\n    public showResults(queryResults, items) {\n        if (queryResults) {\n            showComponent = <div>{React.Children.toArray(items)}</div>\n        }\n        if (queryResults.length === 0) {\n            showComponent = <NoEvents />\n        }\n    }\n    public render() {\n        const { events, hide } = this.props;\n        const items = (events || []).map(event => (<div className=\"hits\"><a href={event.links[0]}>{event.name} </a>, {event.dates}, {event.location}</div>));\n\n        return (\n            <div className=\"hits-container\">\n                {this.showResults(events, items)}\n                <div hidden={hide}>{showComponent}</div>\n                <div hidden={hide}><img src='algolia-logo.svg'></img></div>\n            </div>\n        );\n    }\n} ","import algoliasearch from 'algoliasearch';\nimport { IEvent } from '../interfaces/events';\n\nlet client;\nlet index;\n\n\nexport async function searchClick(query): Promise<IEvent[]> {\n    client = algoliasearch('UFI1GERD33', '0f949363e44d09d51dd523165f9f36a0');\n    index = client.initIndex('conferences');\n    return index.search(query)\n        .then(result => {\n            const hits = result.hits || [];\n            return hits.map((hit => ({\n                name: hit.name,\n                dates: hit.start_date + ' - ' + hit.end_date,\n                links: hit.links || []\n                    .filter(link => link !== '')\n                    .map((link) => ({ url: link })),\n                location: hit.location.city.eng + \" (\" + hit.location.country.eng + \")\"\n            })));\n        });\n}\n","import React, { Component } from 'react';\nimport './index.scss';\n\nexport class NoEvents extends Component<any, any>{\n    public render() {\n        return (\n            <div className='nothing-to-show'>\n                There are no events in our database in this region\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Component } from 'react';\nimport './index.scss';\nimport { HitsContainer } from '../../components/hits-container';\nimport { searchClick } from '../../common/services/search';\nimport { IEvent } from '../../common/interfaces/events';\nimport { Greeting } from '../greeting';\n\nlet events: IEvent[];\n\ninterface ISearchBarState {\n    event: any;\n    query: string;\n    events: IEvent[];\n    hide: boolean;\n}\n\nexport class SearchBar extends Component<any, ISearchBarState> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            event: null,\n            query: '',\n            events: [],\n            hide: true\n        }\n    }\n\n    public async updateEvents(query) {\n\n        try {\n            events = await searchClick(query);\n            this.setState({ events: events, hide: false });\n\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    public render() {\n        const { query, events, hide } = this.state;\n        return (\n            <div>\n                <Paper className='root' elevation={1}>\n                    <InputBase className='inputField' placeholder=\"Type in a name, city, country, year etc.\"\n                        value={this.state.query}\n                        onChange={event => { this.setState({ query: event.target.value }) }}\n                        onKeyPress={event => {\n                            if (event.key === 'Enter') {\n                                this.updateEvents(event.target.value);\n                            }\n                        }}\n                    />\n                    <IconButton className='iconButton' aria-label=\"Search\"\n                        onClick={() => this.updateEvents(query)}>\n                        <SearchIcon />\n                    </IconButton>\n                </Paper>\n                <Greeting hide={hide} />\n                <HitsContainer events={events} hide={hide} />\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './index.scss';\n\nexport class Greeting extends Component<any, any>{\n    public render() {\n        const { hide } = this.props;\n        return (\n            <div className='greeting'>\n                <div className='welcome-text' hidden={!hide}>\n                    Welcome to the place where you can find info about different events in the Finno-Ugric world\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\n\n\nexport class SwitchButton extends Component<any, any> {\n    constructor(props) {\n        super(props);\n    }\n\n    public render() {\n        const { text, link } = this.props;\n\n        return (\n            <div className='button'>\n                <Link to={link} >\n                    <Button variant=\"contained\" color=\"primary\" className='button'>\n                        {text}\n                    </Button>\n                </Link>\n            </div >\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { SearchBar } from '../../components/search-bar';\nimport { SwitchButton } from '../../components/button';\n\nexport class HomePage extends Component<any, any> {\n\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <div className=\"catch-a-reindeer\">\n        <div className=\"App-title\">Catch a Reindeer</div>\n        <SearchBar />\n        <div className='buttons'>\n          <SwitchButton text={'about'} link={'/about'} />\n          <SwitchButton text={'special characters'} link={'/characters'} />\n        </div>\n\n      </div>);\n  }\n}\n\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { SwitchButton } from '../../components/button';\nexport class AboutPage extends Component<any, any>{\n\n    constructor(props) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <div className=\"about\">\n                <div className=\"about-name\"> What is this project? </div>\n                <div className=\"about-text\">\n                    <p>Once upon a time, two crazy Finno-Ugrists/programmers (Kelvin Jackson\n                       and Liliana Listus) were at a hackathon in Budapest, and came up\n                       with the idea to create a website where their fellow crazy linguists\n             could learn about Finno-Ugric events all over the world.</p>\n\n                </div>\n                <img\n                    alt=\"Poro\"\n                    className=\"poro-img\"\n                    src=\"https://images.unsplash.com/photo-1519664824562-b4bc73f9795a?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=aadacfd405bcb202e81895ca188ec8a3&auto=format&fit=crop&w=282&q=80\"\n                />\n\n\n                <SwitchButton text={'Home'} link={'/'} />\n\n\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './index.scss';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\n\nexport class SpecialCharactersContainer extends Component<any, any>{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedCharacter: ''\n        }\n    }\n\n    readonly charactersUdmKomi = ['e̮', 'i̮', 'č́', 'ć', 'č', 'ʒ́', 'ǯ', 'ń', \"l'\", \"d'\", 'ź', 'ś', 'š', 'ž'];\n    readonly charactersMari = ['č́', 'ž', 'š', 'ə̑', \"l'\", 'ń', 'ö', 'ü', 'ä', 'ə', 'č', 'ŋ', 'β', 'γ'];\n    readonly charactersHungarian = ['á', 'é', 'í', 'ó', 'ő', 'ú', 'ü', 'ű'];\n\n    onCharacterClick = (character: string) => {\n        this.setState({ selectedCharacter: character })\n    }\n\n    public render() {\n        const characterToDiv = (character) => {\n            return (\n                <CopyToClipboard text={this.state.selectedCharacter} options={{ debug: true }}\n                    onCopy={() => ToastsStore.success(`${character} copied`)}>\n\n                    <div onClick={(e: any) => {\n                        this.setState({ selectedCharacter: character })\n                    }}\n                        className=\"character\"> {character}</div>\n                </CopyToClipboard>\n            )\n        }\n\n        const mapUdmKomi = this.charactersUdmKomi.map(characterToDiv);\n        const mapMari = this.charactersMari.map(characterToDiv);\n        const mapHungarian = this.charactersHungarian.map(characterToDiv);\n\n        return (<div className='special-characters-container'>\n\n            <ToastsContainer store={ToastsStore} />\n            <div className=\"text\">\n                <div>Udmurtti ja komi: </div>\n                <div className=\"characters\">{React.Children.toArray(mapUdmKomi)}</div>\n                <div>Mari: </div>\n                <div className=\"characters\"> {React.Children.toArray(mapMari)} </div>\n                <div>Unkari: </div>\n                <div className=\"characters\">{React.Children.toArray(mapHungarian)} </div>\n            </div></div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './index.scss';\nimport { SwitchButton } from '../../components/button';\nimport { SpecialCharactersContainer } from '../../components/special-characters-container';\n\n\n\nexport class SpecialCharacters extends Component<any, any>{\n    public render() {\n        return (\n            <div className='special-characters'>\n                <div>Writing a paper and need some special characters?  <p>Just click on one and get it co pied to your buffer</p></div>\n                <SpecialCharactersContainer />\n                <SwitchButton text={'home'} link={'/'} />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { HomePage } from './containers/HomePage';\nimport { AboutPage } from './containers/AboutPage';\nimport { SpecialCharacters } from './containers/SpecialCharacters';\n\nconst Routes = userProps => {\n    return (\n        <Switch>\n            <Route exact path='/about' component={AboutPage} />\n            <Route exact path='/characters' component={SpecialCharacters} />\n            <Route exact path='/' component={HomePage} />\n        </Switch>\n    );\n}\nexport default Routes; ","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Routes from '../routes';\n\nexport class App extends Component<any, any>{\n\n    // constructor(props) {\n    //     super(props)\n    // }\n\n    // this.state = {\n    // redirect: null\n\n\n    public render() {\n        // if (this.state.redirect !== null && this.state.redirect) {\n        //     return <Redirect to=\"/\" />;\n        // } else if (!this.state.user) {\n        //     return null; // loading state\n        // }\n        return (<div><Routes />\n        </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport './index.scss';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n\n);\n\nserviceWorker.unregister;"],"sourceRoot":""}